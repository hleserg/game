#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ Game Collection –Ω–∞ PyPI."""

import subprocess
import sys
from pathlib import Path


def run_command(cmd: list[str], description: str) -> bool:
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    print(f"üîß {description}")
    print(f"–ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")

    try:
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ!")
        if result.stdout:
            print(result.stdout)
        return True
    except subprocess.CalledProcessError as e:
        print("‚ùå –û—à–∏–±–∫–∞!")
        if e.stdout:
            print("STDOUT:", e.stdout)
        if e.stderr:
            print("STDERR:", e.stderr)
        return False


def main() -> int:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏."""
    print("üöÄ –ü—É–±–ª–∏–∫–∞—Ü–∏—è Game Collection –Ω–∞ PyPI")
    print("=" * 50)

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    project_root = Path(__file__).parent.parent
    print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {project_root}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏–∏
    dist_dir = project_root / "dist"
    if not dist_dir.exists():
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è dist/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏—é: python -m build")
        return 1

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏–∏
    dist_files = list(dist_dir.glob("game_collection-1.1.0*"))
    if not dist_files:
        print("‚ùå –§–∞–π–ª—ã –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏–∏ game_collection-1.1.0* –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        print("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏—é: python -m build")
        return 1

    print(f"üì¶ –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏–∏: {len(dist_files)}")
    for file in dist_files:
        print(f"  - {file.name}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏—é
    if not run_command(
        ["python", "-m", "twine", "check", "dist/game_collection-1.1.0*"], "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏–∏"
    ):
        return 1

    print("\n" + "=" * 50)
    print("üéØ –ì–æ—Ç–æ–≤–æ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!")
    print("\n–î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥:")
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ TestPyPI:")
    print("   python -m twine upload --repository testpypi dist/game_collection-1.1.0*")
    print("\n2. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ PyPI:")
    print("   python -m twine upload dist/game_collection-1.1.0*")
    print("\nüìã –ù–µ –∑–∞–±—É–¥—å—Ç–µ:")
    print("   - –°–æ–∑–¥–∞—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å –Ω–∞ PyPI")
    print("   - –ü–æ–ª—É—á–∏—Ç—å API —Ç–æ–∫–µ–Ω")
    print("   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ .pypirc")
    print("\nüìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: PYPI_PUBLICATION_GUIDE.md")

    return 0


if __name__ == "__main__":
    sys.exit(main())
