name: Build PR

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    name: Build Windows
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install pygame
          pip install pyinstaller
          
      - name: Build executable
        run: pyinstaller --onefile --windowed --name GameCollection main.py
        
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: GameCollection-Windows
          path: dist/GameCollection.exe
          retention-days: 7

  build-linux:
    runs-on: ubuntu-latest
    name: Build Linux
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install pygame
          pip install pyinstaller
          
      - name: Build executable
        run: pyinstaller --onefile --name GameCollection main.py
        
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: GameCollection-Linux
          path: dist/GameCollection
          retention-days: 7

  lint:
    runs-on: ubuntu-latest
    name: Lint and Format Check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Run Ruff linter
        run: ruff check .
        
      - name: Run Ruff formatter check
        run: ruff format --check .

  type-check:
    runs-on: ubuntu-latest
    name: Type Check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Run mypy
        run: mypy .

  test:
    runs-on: ubuntu-latest
    name: Test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: pip install pygame
        
      - name: Test imports
        run: |
          python -c "import pygame; print('Pygame version:', pygame.version.ver)"
          python -c "from games.snake import SnakeGame; print('Snake game imported successfully')"
          python -c "from games.arkanoid import ArkanoidGame; print('Arkanoid game imported successfully')"
          python -c "from games.tetris import TetrisGame; print('Tetris game imported successfully')"
          python -c "from games.pacman import PacmanGame; print('Pac-Man game imported successfully')"
          python -c "from ui.menu import MainMenu; print('Main menu imported successfully')"
          print('âœ… All imports successful!')
